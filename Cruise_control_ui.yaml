# cruise-control-ui.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cruise-control-ui-nginx-config
  namespace: kafka-upgrade
data:
  cruise-control-ui-nginx.conf: |
    server {
        listen       80;
        listen  [::]:80;
        server_name  localhost;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        location /kafkacruisecontrol/ {
            proxy_pass http://my-cluster-cruise-control:9090/kafkacruisecontrol/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, X-Requested-With' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Expose-Headers' 'User-Task-ID, Content-Type, Authorization' always;

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, X-Requested-With';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cruise-control-ui
  namespace: kafka-upgrade
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cruise-control-ui
  template:
    metadata:
      labels:
        app: cruise-control-ui
    spec:
      volumes:
      - name: nginx-config
        configMap:
          name: cruise-control-ui-nginx-config
      containers:
      - name: cruise-control-ui
        image: densecravpfyifvv42u6.azurecr.io/cruise-control-ui:1.0
        ports:
        - containerPort: 80
        env:
        - name: CC_UI_BACKEND_HOST
          value: "my-cluster-cruise-control"
        - name: CC_UI_BACKEND_PORT
          value: "9090"
        - name: CC_UI_SERVER_PORT
          value: "80"
        - name: CC_UI_KAFKA_CLUSTER_NAME
          value: "my-cluster"
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: cruise-control-ui-nginx.conf
        resources:
          requests:
            memory: 256Mi
            cpu: 100m
          limits:
            memory: 512Mi
            cpu: 200m
---
apiVersion: v1
kind: Service
metadata:
  name: cruise-control-ui
  namespace: kafka-upgrade
spec:
  type: LoadBalancer
  selector:
    app: cruise-control-ui
  ports:
  - port: 8080
    targetPort: 80
